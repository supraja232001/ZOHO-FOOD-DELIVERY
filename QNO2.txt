void SetDel()
{
int currentId=-1,i=0,j=0;
for(i=0;i<reccount;i++)
{
	if(src[i].did<0)
	{
	       src[i].did=++currentId;
	       delcount[currentId]++;
	       for(j=i+1;j<reccount;j++)
	       {
			if(
			(strcmp(src[j].dest,src[i].dest)==0)
			&&
			(timediff(src[j].time,src[i].time)==1)
			)
		       {
			       src[j].did=currentId;
			       delcount[currentId]++;
		       }
	       }
	}
       printEarnings();
}
}
// To print the report as provided
void printEarnings()
{
	int i = 0;
printf ("EXECUTIVES\t\tEARNINGS\n");
for(i=0;i<5;i++)
{
printf ("DE%d\t\t\t",i+1);
printf("%d",(delcount[i] > 0) ? (50+((delcount[i]-1) * 5)):0);
printf("\n");
}
}
// Convert 24 hr format to min and find the diff. Return 1 if within limits
int timediff( char x[], char y[])
{
char tmp1[30],tmp2[30];
char *token2,*token1;
int hr1,min1,hr2,min2,total1,total2;

strcpy (tmp1,x);
strcpy(tmp2,y);
token1=strtok(x,":");
hr1=atoi(token1);
token1=strtok(NULL,'\0');
min1=atoi(token1);
total1=hr1*60+min1;
token2=strtok(y,":");
hr2=atoi(token2);
token2=strtok(NULL,'\0');
min2=atoi(token2);
total2=hr2*60+min2;
strcpy (x,tmp1);
strcpy (y,tmp2);
if(abs(total1-total2)<=15)
{
return 1;
}
else
{
return 0;
}
}
// Convert 24 hr format to min and find the diff. Return 1 if within limits
int timediff( char x[], char y[])
{
char tmp1[30],tmp2[30];
char *token2,*token1;
int hr1,min1,hr2,min2,total1,total2;

strcpy (tmp1,x);
strcpy(tmp2,y);
token1=strtok(x,":");
hr1=atoi(token1);
token1=strtok(NULL,'\0');
min1=atoi(token1);
total1=hr1*60+min1;
token2=strtok(y,":");
hr2=atoi(token2);
token2=strtok(NULL,'\0');
min2=atoi(token2);
total2=hr2*60+min2;
strcpy (x,tmp1);
strcpy (y,tmp2);
if(abs(total1-total2)<=15)
{
return 1;
}
else
{
return 0;
}
}
